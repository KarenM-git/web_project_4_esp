!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o){var i=o.handleCardClick,c=o.handleDeleteBttn,a=o.handleCardLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._likes=e.likes,this._isLiked=!1,this._ownerId=e.owner._id,this._userId=r,this._cardId=e._id,this._cardSelector=n,this._handleCardClick=i,this._handleDeleteBttn=c,this._handleCardLike=a}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".cards__element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".cards__image").src=this._link,this._element.querySelector(".cards__caption").textContent=this._name,this._element.querySelector(".cards__image").alt=this._name,this._element.querySelector(".like-count").textContent=this._likes.length,this.disableDeleteBttn(),this._checkIfIsLiked(),this._element}},{key:"disableDeleteBttn",value:function(){this._ownerId!==this._userId&&this._element.querySelector(".cards__delete-button").remove()}},{key:"changeLikesNumber",value:function(e){return this._element.querySelector(".like-count").textContent=e.likes.length}},{key:"_checkIfIsLiked",value:function(){var e=this;this._likes.forEach((function(t){t._id===e._userId&&(e._isLiked=!0,e._element.querySelector(".like-button").classList.add("like-button_active"))}))}},{key:"_changeLikeState",value:function(){this._isLiked=!this._isLiked}},{key:"_likeIsActive",value:function(e){this._isLiked?e.target.classList.add("like-button_active"):e.target.classList.remove("like-button_active")}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".like-button").addEventListener("click",(function(t){e._changeLikeState(),e._likeIsActive(t),e._handleCardLike(e._isLiked,e._cardId)})),this._element.querySelector(".cards__delete-button").addEventListener("click",(function(){e._handleDeleteBttn(e._cardId)})),this._element.querySelector(".cards__image").addEventListener("click",(function(){e._handleCardClick(e._link,e._name)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._input=t.inputSelector,this._submitButton=t.submitButtonSelector,this._inactiveButton=t.inactiveButtonClass,this._inputError=t.inputErrorClass,this._errorVisisble=t.errorClass}var t,r;return t=e,(r=[{key:"_getFormElement",value:function(){return this._element=document.querySelector(this._form),this._element}},{key:"_showInputError",value:function(e,t){var n=this._element.querySelector(".".concat(e.id,"-error"));e.classList.add("this._inputError"),n.textContent=t,n.classList.add(this._errorVisisble)}},{key:"_hideInputError",value:function(e){var t=this._element.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputError),t.classList.remove(this._errorVisisble),t.textContent=""}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._inactiveButton),t.disabled=!0):(t.classList.remove(this._inactiveButton),t.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this._element=this._getFormElement();var t=Array.from(this._element.querySelectorAll(this._input)),n=this._element.querySelector(this._submitButton);this._toggleButtonState(t,n),t.forEach((function(r){r.addEventListener("input",(function(){e._isValid(r),e._toggleButtonState(t,n)}))}))}},{key:"enableValidation",value:function(){var e=this;this._element=this._getFormElement();var t=Array.from(this._element.querySelectorAll(this._input)),n=this._element.querySelector(this._submitButton);this._element.addEventListener("submit",(function(r){r.preventDefault(),e._toggleButtonState(t,n)})),this._setEventListeners()}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderer",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEsc=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEsc)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEsc)}},{key:"_handleEscClose",value:function(e){if("Escape"===e.key)return this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".close-button").addEventListener("click",(function(){e.close()})),document.addEventListener("click",(function(t){t.target.classList.contains("popup")&&e.close()}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=f(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},l.apply(this,arguments)}function f(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}function p(e,t){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},p(e,t)}function d(e,t){if(t&&("object"===u(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function c(e){var t,n=e.popupSelector,r=e.callback;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,n))._popup=document.querySelector(n),t._sendForm=r,t._form=t._popup.querySelector(".popup__form"),t._sendBttn=t._form.querySelector(".submit-button"),t}return t=c,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._form.querySelectorAll(".popup__input"),this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"renderLoading",value:function(e){e&&(this._sendBttn.textContent="Guardando...")}},{key:"setEventListeners",value:function(){var e=this;l(h(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e.renderLoading(!0),e._sendForm(e._getInputValues()),e._form.reset()}))}},{key:"close",value:function(){l(h(c.prototype),"close",this).call(this),this._form.reset()}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(a);function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=m(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function m(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}function k(e,t){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},k(e,t)}function g(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function c(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(r=i.call(this,e))._link=t,r._name=n,r._popupImageShown=document.querySelector(".img-popup__image"),r._popupImageCaption=document.querySelector(".img-popup__caption"),r}return t=c,(n=[{key:"open",value:function(){v(S(c.prototype),"open",this).call(this),this._popupImageShown.src=this._link,this._popupImageShown.alt=this._name,this._popupImageCaption.textContent=this._name,v(S(c.prototype),"setEventListeners",this).call(this)}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(a);function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t){var n=t.nameSelector,r=t.ocupationSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._username=document.querySelector(n),this._ocupation=document.querySelector(r),this._avatar=document.querySelector(o),this._nameInput=document.querySelector(".popup__input_type_name"),this._jobInput=document.querySelector(".popup__input_type_about-me"),this._avatarInput=document.querySelector(".popup__input_type_profile-pic")}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameInput.value,about:this._jobInput.value}}},{key:"setUserInfo",value:function(e){this._username.textContent=e.name,this._ocupation.textContent=e.about}},{key:"setAvatar",value:function(e){this._avatar.src=e.avatar}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._username=document.querySelector(".profile__name"),this._ocupation=document.querySelector(".profile__description"),this._avatar=document.querySelector(".popup__input_type_profile-pic")}var t,n;return t=e,(n=[{key:"getUserData",value:function(){return fetch("https://around.nomoreparties.co/v1/cohort-1-es/users/me",{headers:{authorization:"2be75b7b-0f52-418b-b96c-41c3ad1377b3"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getInitialCards",value:function(){return fetch("https://around.nomoreparties.co/v1/cohort-1-es/cards",{headers:{authorization:"2be75b7b-0f52-418b-b96c-41c3ad1377b3"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"saveProfileData",value:function(){return fetch("https://around.nomoreparties.co/v1/cohort-1-es/users/me",{method:"PATCH",headers:{authorization:"2be75b7b-0f52-418b-b96c-41c3ad1377b3","Content-Type":"application/json"},body:JSON.stringify({name:this._username.textContent,about:this._ocupation.textContent})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateProfilePic",value:function(){return fetch("https://around.nomoreparties.co/v1/cohort-1-es/users/me/avatar",{method:"PATCH",headers:{authorization:"2be75b7b-0f52-418b-b96c-41c3ad1377b3","Content-Type":"application/json"},body:JSON.stringify({avatar:this._avatar.value})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addCardToServer",value:function(e){return fetch("https://around.nomoreparties.co/v1/cohort-1-es/cards",{method:"POST",headers:{authorization:"2be75b7b-0f52-418b-b96c-41c3ad1377b3","Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("https://around.nomoreparties.co/v1/cohort-1-es/cards/"+e,{method:"DELETE",headers:{authorization:"2be75b7b-0f52-418b-b96c-41c3ad1377b3","Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addLike",value:function(e){return fetch("https://around.nomoreparties.co/v1/cohort-1-es/cards/likes/"+e,{method:"PUT",headers:{authorization:"2be75b7b-0f52-418b-b96c-41c3ad1377b3","Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"removeLike",value:function(e){return fetch("https://around.nomoreparties.co/v1/cohort-1-es/cards/likes/"+e,{method:"DELETE",headers:{authorization:"2be75b7b-0f52-418b-b96c-41c3ad1377b3","Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),P=document.querySelector(".edit-button"),C=document.querySelector(".add-button"),I=document.querySelector(".profile__avatar-overlay"),q={inputSelector:".popup__input",submitButtonSelector:".submit-button",inactiveButtonClass:"submit-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=D(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},R.apply(this,arguments)}function D(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}function x(e,t){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},x(e,t)}function V(e,t){if(t&&("object"===T(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}var F=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&x(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=A(r);if(o){var n=A(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return V(this,e)});function c(e,t,n){var r,o=n.sendForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(r=i.call(this,e))._form=r._popup.querySelector(".popup__form"),r._sendForm=o,r._cardId=t,r}return t=c,(n=[{key:"setEventListeners",value:function(){var e=this;R(A(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._sendForm(e._cardId)}))}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(a);function z(e){var n=new t(e,"#cards-template","7ff4cbebe1137a7c57e5d511",{handleCardClick:function(e,t){new w(".img-popup",e,t).open()},handleDeleteBttn:function(e){var t=new F(".popup__delete-card",e,{sendForm:function(e){M.deleteCard(e),r.remove(),t.close()}});t.open(),t.setEventListeners()},handleCardLike:function(e,t){e?M.addLike(t).then((function(e){n.changeLikesNumber(e)})).catch((function(e){console.log(e)})):M.removeLike(t).then((function(e){n.changeLikesNumber(e)})).catch((function(e){console.log(e)}))}}),r=n.generateCard();U.addItem(r)}var U=new i({items:[],renderer:function(e){z(e)}},".cards");new r(q,".popup__form").enableValidation(),new r(q,".popup__form_add_place").enableValidation(),new r(q,".popup_profile-pic").enableValidation();var N=new j({nameSelector:".profile__name",ocupationSelector:".profile__description",avatarSelector:".profile__avatar"}),J=new y({popupSelector:".popup",callback:function(){var e=N.getUserInfo();N.setUserInfo(e),J.close(),M.saveProfileData().then((function(){})).catch((function(e){console.log(e)})).finally((function(){J.renderLoading(!1)}))}}),H=new y({popupSelector:".popup_add_place",callback:function(e){M.addCardToServer(e).then((function(e){z(e)})).catch((function(e){console.log(e)})).finally((function(){H.renderLoading(!1)})),H.close()}}),G=new y({popupSelector:".popup_profile-pic",callback:function(){M.updateProfilePic().then((function(e){N.setAvatar(e)})).catch((function(e){console.log(e)})).finally((function(){G.renderLoading(!1)})),G.close()}});G.setEventListeners(),P.addEventListener("click",(function(){J.open(),J.setEventListeners()})),C.addEventListener("click",(function(){H.open(),H.setEventListeners()})),I.addEventListener("click",(function(){G.open()}));var M=new L;M.getInitialCards().then((function(e){var t=e.reverse();U.renderer(t)})).catch((function(e){console.log(e)})),M.getUserData().then((function(e){N.setUserInfo(e),N.setAvatar(e)})).catch((function(e){console.log(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,